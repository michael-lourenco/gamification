app: leaderboard
service: leaderboardService
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  versionFunctions: false
  stage: ${opt:stage, 'dev'}
  credentials:
    accessKeyId: ${env:AWS_ACCESS_KEY_ID}
    secretAccessKey: ${env:AWS_SECRET_ACCESS_KEY}
  environment:
    AWS_CUSTOM_REGION: ${env:AWS_CUSTOM_REGION}
    API_KEY: ${env:API_KEY}
    DYNAMO_TABLE_LEADERBOARDS: "leaderboards-${opt:stage, 'dev'}"
  apiGateway:
    usagePlan:
      quota:
        limit: 50000
        offset: 2
        period: MONTH
      throttle:
        burstLimit: 200
        rateLimit: 100
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
            - dynamodb:Scan
            - dynamodb:UpdateItem
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_TABLE_LEADERBOARDS}"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_TABLE_LEADERBOARDS}/index/*"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_TABLE_LEADERBOARDS}/stream/*"         

resources:
  Resources:
    LeaderboardTableDynamoDB:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.DYNAMO_TABLE_LEADERBOARDS}
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

functions:
  createLeaderboard:
    handler: dist/interfaceAdapters/lambdas/createLeaderboard.handler
    logRetentionInDays: 14
    memorySize: 128
    timeout: 30
    ephemeralStorageSize: 512
    events:
      - http:
          path: leaderboards/create
          method: post
          cors: true

  listLeaderboard:
    handler: dist/interfaceAdapters/lambdas/listLeaderboards.handler
    logRetentionInDays: 14
    memorySize: 128
    timeout: 30
    ephemeralStorageSize: 512
    events:
      - http:
          path: leaderboards/list
          method: get
          cors: true

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-include-dependencies
  - serverless-offline

package:
  exclude:
    - node_modules/**
    - leaderboardService/node_modules/**
    - src/**
  include:
  #   - src/services/**
    - dist/**
